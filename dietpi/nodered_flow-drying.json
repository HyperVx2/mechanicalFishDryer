[
    {
        "id": "6d6c904c1ae588cf",
        "type": "tab",
        "label": "Drying Session",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "71422cda4947848b",
        "type": "mysql",
        "z": "6d6c904c1ae588cf",
        "mydb": "c7bae59f6a7a43c0",
        "name": "",
        "x": 590,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "469cce9e5aa2f8c3",
        "type": "ui-table",
        "z": "6d6c904c1ae588cf",
        "group": "d632f08ecb93a8c5",
        "name": "data_drying",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "append",
        "x": 630,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "7715bce262e6fbee",
        "type": "ui-table",
        "z": "6d6c904c1ae588cf",
        "group": "a6a07827f9f64881",
        "name": "post_drying_data",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "maxrows": 0,
        "passthru": false,
        "autocols": true,
        "showSearch": true,
        "selectionType": "none",
        "columns": [],
        "mobileBreakpoint": "sm",
        "mobileBreakpointType": "defaults",
        "action": "append",
        "x": 650,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "21d52a518ffd1efd",
        "type": "ui-form",
        "z": "6d6c904c1ae588cf",
        "name": "Start Dryer Form",
        "group": "d09b58eed4eee17d",
        "label": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Fish Type",
                "key": "fish_type",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Trays Used",
                "key": "trays_used",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Weight (g)",
                "key": "weight",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Drying Time (mins)",
                "key": "drying_time",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Use FIS",
                "key": "use_fis",
                "type": "checkbox",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "fish_type": "",
            "trays_used": "",
            "weight": "",
            "drying_time": "",
            "use_fis": false
        },
        "payload": "",
        "submit": "Start",
        "cancel": "Clear",
        "resetOnSubmit": false,
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "passthru": false,
        "dropdownOptions": [],
        "x": 150,
        "y": 60,
        "wires": [
            [
                "e616042ef265bc8f"
            ]
        ]
    },
    {
        "id": "e616042ef265bc8f",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "processFormData",
        "func": "// Receive payload\nvar data = msg.payload;\n\n// Set data to context\nflow.set(\"trays_used\", data.trays_used);\nglobal.set(\"fish_type\", data.fish_type);\nglobal.set(\"timer_value\", data.drying_time);\nglobal.set(\"is_active\", true);\n\nmsg.topic = `INSERT INTO drying_session \n    (type, trays_used, start_timestamp, weight_start, humidity_start) \n    VALUES \n    ('${data.fish_type.toLowerCase()}', ${data.trays_used}, NOW(), ${data.weight}, ${global.get('humidity')})`;\n\n\n// Prepare dryer data\nfunction minutesToMilliseconds(minutes) {\n    return minutes * 60 * 1000;\n}\nmsg.payload = minutesToMilliseconds(data.drying_time);\n\nnode.status({fill:\"blue\", shape:\"dot\", text:\"OK\"});\nreturn msg;\n    ",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "c5c3d0e32d4b8d12",
                "fcf9cd72538dbb6e",
                "dbaa774d14869dd0"
            ]
        ]
    },
    {
        "id": "c5c3d0e32d4b8d12",
        "type": "mqtt out",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "topic": "esp32/timer/start",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c22cbfaf233a6e9b",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "03ac53f9edf80c94",
        "type": "mqtt out",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "topic": "esp32/heater",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c22cbfaf233a6e9b",
        "x": 1470,
        "y": 200,
        "wires": []
    },
    {
        "id": "1a58f99ad2cb02d7",
        "type": "mqtt out",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "topic": "esp32/fan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c22cbfaf233a6e9b",
        "x": 1460,
        "y": 160,
        "wires": []
    },
    {
        "id": "c5195245caac8742",
        "type": "trigger",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "overrideDelay": true,
        "units": "min",
        "reset": "reset",
        "bytopic": "topic",
        "topic": "topic",
        "outputs": 1,
        "x": 1150,
        "y": 460,
        "wires": [
            [
                "fd65ac811feff5a6"
            ]
        ]
    },
    {
        "id": "fd65ac811feff5a6",
        "type": "mqtt out",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "topic": "esp32/fan",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c22cbfaf233a6e9b",
        "x": 1340,
        "y": 460,
        "wires": []
    },
    {
        "id": "6e1caa2fd0e17b74",
        "type": "mysql",
        "z": "6d6c904c1ae588cf",
        "mydb": "c7bae59f6a7a43c0",
        "name": "",
        "x": 1610,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "f0f52928eca57118",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "prepare postSession",
        "func": "function updateSession(msg) {\n    // Only process when timer reaches 0\n    if (msg.payload === 0 && global.get('is_active')) {\n        global.set('is_active', false);\n        msg.delay = 300000; // Set delay to 5mins before post drying save\n        msg.payload = false;\n\n        node.log(\"Post Session Event\");\n        node.status({fill:\"green\", shape:\"dot\", text:\"Session Updated\"});\n        return msg;\n    }\n\n    node.status({fill:\"red\", shape:\"dot\", text:\"false\"});\n    return null;\n}\n\nreturn updateSession(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 400,
        "wires": [
            [
                "49fd9472822286a8",
                "c5195245caac8742",
                "71e7c7e272ee30a8",
                "c8af558caf8b82d8"
            ]
        ]
    },
    {
        "id": "49fd9472822286a8",
        "type": "delay",
        "z": "6d6c904c1ae588cf",
        "name": "delay postSession",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1170,
        "y": 520,
        "wires": [
            [
                "03dc94803741ba7d",
                "e6ab8a3ec44e3a12"
            ]
        ]
    },
    {
        "id": "03dc94803741ba7d",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "sqlQuery postSession",
        "func": "function updateSession(msg) {\n\n    // Get current values\n    const humidity = global.get('humidity');\n    const weight = global.get('weight');\n        \n    // Prepare SQL query\n    msg.topic = `UPDATE drying_session \n                SET end_timestamp = NOW(),\n                    humidity_end = ${humidity},\n                    weight_end = ${weight}\n                WHERE id = (SELECT MAX(id) FROM drying_session)`;\n                \n    // Clear payload as it's not needed for SQL node\n    msg.payload = [];\n    \n    node.status({fill:\"green\", shape:\"dot\", text:\"Session Updated\"});\n    return msg;\n}\n\nreturn updateSession(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 520,
        "wires": [
            [
                "b8c7cd7405b43b06"
            ]
        ]
    },
    {
        "id": "dbaa774d14869dd0",
        "type": "delay",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 580,
        "y": 200,
        "wires": [
            [
                "5171ea429d0b6a0d",
                "d98e52368dee885a"
            ]
        ]
    },
    {
        "id": "73b3e72c78bc49ee",
        "type": "ui-notification",
        "z": "6d6c904c1ae588cf",
        "ui": "a5d0a76114c2a2c4",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "",
        "x": 850,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "fcf9cd72538dbb6e",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "dryingSessionStart-notif",
        "func": "msg.payload = \"Drying start\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 100,
        "wires": [
            [
                "73b3e72c78bc49ee"
            ]
        ]
    },
    {
        "id": "9cbd29e958d0eddf",
        "type": "ui-notification",
        "z": "6d6c904c1ae588cf",
        "ui": "a5d0a76114c2a2c4",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "",
        "x": 1490,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "b910ae511e26b618",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "send notif",
        "func": "msg.payload = \"Monitor temperature check\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 320,
        "wires": [
            [
                "9cbd29e958d0eddf"
            ]
        ]
    },
    {
        "id": "a750a1a2417c586a",
        "type": "ui-notification",
        "z": "6d6c904c1ae588cf",
        "ui": "a5d0a76114c2a2c4",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "",
        "x": 1410,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "71e7c7e272ee30a8",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "preparePostSession-notif",
        "func": "msg.payload = \"Drying done. Wait 15 minutes until fan stops.\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "a750a1a2417c586a"
            ]
        ]
    },
    {
        "id": "e6ab8a3ec44e3a12",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "PostSession-notif",
        "func": "msg.payload = \"Drying done.\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 620,
        "wires": [
            [
                "9adf4c3ac2765c61"
            ]
        ]
    },
    {
        "id": "9adf4c3ac2765c61",
        "type": "ui-notification",
        "z": "6d6c904c1ae588cf",
        "ui": "a5d0a76114c2a2c4",
        "position": "top right",
        "colorDefault": true,
        "color": "#000000",
        "displayTime": "5",
        "showCountdown": true,
        "outputs": 1,
        "allowDismiss": true,
        "dismissText": "Close",
        "allowConfirm": false,
        "confirmText": "Confirm",
        "raw": false,
        "className": "",
        "name": "",
        "x": 1590,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "d98e52368dee885a",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "checkTimer",
        "func": "function checkTimer(msg) {\n    const timer_value = global.get('timer_value');\n    const is_active = global.get('is_active');\n    \n    msg.topic = [];\n\n    if (!is_active) {\n        msg.reset = true;\n        node.status({ fill: 'grey', shape: 'dot', text: 'inactive' });\n        return null;\n    }\n\n    if (timer_value === 0 && is_active) {\n        msg.payload = 0;\n    } else {\n        msg.payload = 1;\n    }\n\n    msg.delay = 900000; // 15 minutes\n    node.status({ fill: 'blue', shape: 'dot', text: 'OK' });\n    return msg;\n}\nreturn checkTimer(msg);",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 320,
        "wires": [
            [
                "7f68e71c9e53f119",
                "73e2d594c8d31e74"
            ]
        ]
    },
    {
        "id": "f6d397683dbbf677",
        "type": "function",
        "z": "6d6c904c1ae588cf",
        "name": "monitorTemperature",
        "func": "function monitorTemperature(msg) {\n    const traysUsed = flow.get('traysUsed') || 2;\n    const heaterState = global.get('heater_state');\n    const temperature = global.get('temperature');\n\n    // Predefined temperature ranges\n    const TEMP_RANGES = {\n        1: [55, 60],\n        2: [55, 60],\n        3: [58, 64],\n        4: [60, 65],\n        5: [60, 70],\n        6: [65, 70]\n    };\n\n    const [minTemp, maxTemp] = TEMP_RANGES[traysUsed] || [55, 60];\n\n    let newHeaterState = heaterState;\n    if (temperature > maxTemp && heaterState) {\n        newHeaterState = false;\n    } else if (temperature < minTemp && !heaterState) {\n        newHeaterState = true;\n    }\n\n    msg.payload = newHeaterState;\n\n    node.status({ fill: 'blue', shape: 'dot', text: `Temperature: ${temperature}°C - Heater: ${newHeaterState}` });\n    return msg;\n}\nreturn monitorTemperature(msg);",
        "outputs": 1,
        "timeout": "3000",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "03ac53f9edf80c94",
                "b910ae511e26b618",
                "d98e52368dee885a",
                "f4e247be27521059"
            ]
        ]
    },
    {
        "id": "a9227ceb2983500e",
        "type": "inject",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"fish_type\":\"var-test\",\"trays_used\":5,\"weight\":500,\"drying_time\":30,\"use_fis\":false}",
        "payloadType": "json",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "e616042ef265bc8f"
            ]
        ]
    },
    {
        "id": "f4e247be27521059",
        "type": "debug",
        "z": "6d6c904c1ae588cf",
        "name": "monitorTemp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 260,
        "wires": []
    },
    {
        "id": "73e2d594c8d31e74",
        "type": "debug",
        "z": "6d6c904c1ae588cf",
        "name": "checkTimer",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 280,
        "wires": []
    },
    {
        "id": "5171ea429d0b6a0d",
        "type": "trigger",
        "z": "6d6c904c1ae588cf",
        "name": "trigger relay",
        "op1": "true",
        "op2": "",
        "op1type": "bool",
        "op2type": "nul",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 770,
        "y": 200,
        "wires": [
            [
                "1a58f99ad2cb02d7",
                "03ac53f9edf80c94"
            ]
        ]
    },
    {
        "id": "7f68e71c9e53f119",
        "type": "switch",
        "z": "6d6c904c1ae588cf",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "c59eee1e7c1b5373"
            ],
            [
                "f0f52928eca57118"
            ]
        ]
    },
    {
        "id": "c59eee1e7c1b5373",
        "type": "delay",
        "z": "6d6c904c1ae588cf",
        "name": "15mins delay",
        "pauseType": "delayv",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "f6d397683dbbf677"
            ]
        ]
    },
    {
        "id": "c8af558caf8b82d8",
        "type": "debug",
        "z": "6d6c904c1ae588cf",
        "name": "pre-postSession",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 460,
        "wires": []
    },
    {
        "id": "b8c7cd7405b43b06",
        "type": "debug",
        "z": "6d6c904c1ae588cf",
        "name": "postSession",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 580,
        "wires": []
    },
    {
        "id": "c7bae59f6a7a43c0",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "sensor_data",
        "tz": "+08:00",
        "charset": "UTF8"
    },
    {
        "id": "d632f08ecb93a8c5",
        "type": "ui-group",
        "name": "Drying Data",
        "page": "bcb5410c21f10d0b",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "a6a07827f9f64881",
        "type": "ui-group",
        "name": "Post Drying Data",
        "page": "bcb5410c21f10d0b",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "d09b58eed4eee17d",
        "type": "ui-group",
        "name": "Start Dryer",
        "page": "f7c89c2c63c4096e",
        "width": "6",
        "height": "1",
        "order": 7,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c22cbfaf233a6e9b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a5d0a76114c2a2c4",
        "type": "ui-base",
        "name": "SMFDS Dashboard",
        "path": "/dashboard",
        "appIcon": "https://github.com/HyperVx2/mechanicalFishDryer/blob/main/data/favicon.png?raw=true",
        "includeClientData": false,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": true,
        "showPageTitle": true,
        "navigationStyle": "icon",
        "titleBarStyle": "default",
        "showReconnectNotification": true,
        "notificationDisplayTime": "1",
        "showDisconnectNotification": true
    },
    {
        "id": "bcb5410c21f10d0b",
        "type": "ui-page",
        "name": "Historical Data",
        "ui": "a5d0a76114c2a2c4",
        "path": "/page2",
        "icon": "table",
        "layout": "grid",
        "theme": "e717cb789e5b76fb",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f7c89c2c63c4096e",
        "type": "ui-page",
        "name": "Home",
        "ui": "a5d0a76114c2a2c4",
        "path": "/page1",
        "icon": "home",
        "layout": "grid",
        "theme": "e717cb789e5b76fb",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "2"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": true,
        "disabled": false
    },
    {
        "id": "e717cb789e5b76fb",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094CE",
            "bgPage": "#eeeeee",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    }
]